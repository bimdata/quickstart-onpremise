---
version: "3.8"
services:
{% if not use_external_db and inventory_hostname in groups['db'] %}
  # Databases
  {{ compose_dbs | to_nice_yaml(indent=2) | indent(2) }}
{%- endif %}

{% if not use_external_rabbitmq %}
  # RabbitMQ
  rabbitmq:
    container_name: rabbitmq
    image: {{ docker_rabbitmq_image }}:{{ docker_rabbitmq_tag }}
    ports:
      - {{ rabbitmq_port }}:5672
    expose:
      - 15672
    environment:
      - VIRTUAL_HOST={{ rabbitmq_admin_dns_name }}
      - VIRTUAL_PORT=15672
      - RABBITMQ_DEFAULT_USER={{ rabbitmq_user }}
      - RABBITMQ_DEFAULT_PASS={{ rabbitmq_password }}
    restart: unless-stopped
{% endif %}

  # Web frontal
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:alpine
    ports:
      - {{ external_port_http }}:80
      - {{ external_port_https }}:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - {{ bimdata_docker_volume_path }}/web/conf.d:/etc/nginx/conf.d:rw
      - {{ bimdata_docker_volume_path }}/web/vhost.d:/etc/nginx/vhost.d:ro
      - {{ bimdata_docker_volume_path }}/web/certs:/etc/nginx/certs:ro
      - {{ bimdata_docker_volume_path }}/web/dhparam.pem:/etc/nginx/dhparam/dhparam.pem:ro
      - {{ bimdata_docker_volume_path }}/web/static:/var/www/static/:ro
    restart: unless-stopped

  api:
    container_name: api
    build:
      context: {{ bimdata_docker_volume_path }}
      args:
        - IMAGE={{ docker_api_image }}
        - TAG={{ docker_api_tag }}
      dockerfile: {{ bimdata_dockerfiles_path }}/bases.dockerfile
    command: bash -c "python manage.py collectstatic --no-input & python manage.py migrate && python manage.py process_tasks & gunicorn bimdata.wsgi -w $$(( 2 * `cat /proc/cpuinfo | grep 'core id' | wc -l` + 1 )) -b 0.0.0.0:8000 --timeout 1200 --access-logfile '-' --error-logfile '-' --worker-tmp-dir /dev/shm --log-level INFO"
    expose:
      - 8000
    volumes:
      - {{ bimdata_docker_volume_path }}/web/static/api:/opt/statics:rw
      - {{ bimdata_docker_volume_path }}/web/static/api_storage:/opt/storage:rw
    environment:
      - VIRTUAL_HOST={{ api_dns_name }}
      - ENV={{ app_env }}
      - API_URL=https://{{ api_dns_name }}
      - DOC_URL=https://developers.bimdata.io
      - CONNECT_URL=https://{{ connect_dns_name }}
      - ALLOWED_HOSTS={{ api_dns_name }}
      - MASTER_TOKEN={{ master_token }}
      - SECRET_KEY={{ api_secret_key }}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST={{ db_api_host }}
      - DB_PORT={{ db_api_port }}
      - DB_NAME={{ db_api_name }}
      - DB_USER={{ db_api_user }}
      - DB_PASSWORD={{ db_api_password }}
      - RABBITMQ_HOST={{ rabbitmq_host }}
      - RABBITMQ_PORT={{ rabbitmq_port }}
      - RABBITMQ_USER={{ rabbitmq_user }}
      - RABBITMQ_PASSWORD={{ rabbitmq_password }}
      - OIDC_PROVIDER_ENDPOINT=https://{{ iam_dns_name }}
      - OIDC_PROVIDER_ADMIN_LOGIN={{ iam_user }}
      - OIDC_PROVIDER_ADMIN_PASSWORD={{ iam_password }}
      - SMTP_HOST={{ smtp_host }}
      - SMTP_PORT={{ smtp_port }}
      - SMTP_USER={{ smtp_user }}
      - SMTP_PASS={{ smtp_pass }}
      - SMTP_USE_TLS={{ smtp_use_tls }}
      - DEFAULT_FROM_EMAIL={{ smtp_default_email }}
      - ADMIN_INTERFACE=True
      - DATA_UPLOAD_MAX_MEMORY_SIZE={{ max_upload_size | human_to_bytes }}
      - REQUESTS_CA_BUNDLE=/usr/local/share/ca-certificates/custom-ca.crt
    restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
    extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}
    depends_on:
{% if not use_external_db and inventory_hostname in groups['db'] %}
      - api-db
{% endif %}
{% if not use_external_rabbitmq %}
      - rabbitmq
{% endif %}
      - nginx-proxy
      - iam

  connect:
    container_name: connect
    build:
      context: {{ bimdata_docker_volume_path }}
      args:
        - IMAGE={{ docker_connect_image }}
        - TAG={{ docker_connect_tag }}
      dockerfile: {{ bimdata_dockerfiles_path }}/bases.dockerfile
    command: dockerize -timeout 60s -wait https://{{ iam_dns_name }} bash -c "python manage.py compilescss && python manage.py collectstatic --no-input & python manage.py migrate && python manage.py process_tasks & gunicorn auth.wsgi -w 4 -b 0.0.0.0:8000 --timeout 1200"
    expose:
      - 8000
    volumes:
      - {{ bimdata_docker_volume_path }}/web/static/auth:/opt/static:rw
    environment:
      - VIRTUAL_HOST={{ connect_dns_name }}
      - ENV={{ app_env }}
      - API_URL=https://{{ api_dns_name }}
      - DOC_URL=https://developers.bimdata.io
      - SITE_URL=https://{{ connect_dns_name }}
      - PLATFORM_URL=https://{{ platform_front_dns_name }}
      - IAM_URL=https://{{ iam_dns_name }}
      - IAM_ADMIN_LOGIN={{ iam_user }}
      - IAM_ADMIN_PASSWORD={{ iam_password }}
      - ALLOWED_HOSTS={{ connect_dns_name }}
      - API_TOKEN={{ master_token }}
      - SECRET_KEY={{ connect_secret_key }}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST={{ db_connect_host }}
      - DB_PORT={{ db_connect_port }}
      - DB_NAME={{ db_connect_name }}
      - DB_USER={{ db_connect_user }}
      - DB_PASSWORD={{ db_connect_password }}
      - SMTP_HOST={{ smtp_host }}
      - SMTP_PORT={{ smtp_port }}
      - SMTP_USER={{ smtp_user }}
      - SMTP_PASS={{ smtp_pass }}
      - SMTP_USE_TLS={{ smtp_use_tls }}
      - INVITATION_SECRET={{ connect_invitation_secret }}
      - INVITATION_CLIENT_ID={{ connect_invitation_client }}
      - INVITATION_CLIENT_SECRET={{ connect_invitation_client_secret }}
      - ADMIN_INTERFACE=True
      - REQUESTS_CA_BUNDLE=/usr/local/share/ca-certificates/custom-ca.crt
    restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
    extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}
    depends_on:
{% if not use_external_db and inventory_hostname in groups['db'] %}
      - connect-db
{% endif %}
      - iam
      - nginx-proxy

  platform-back:
    container_name: platform-back
    build:
      context: {{ bimdata_docker_volume_path }}
      args:
        - IMAGE={{ docker_platform_back_image }}
        - TAG={{ docker_platform_back_tag }}
      dockerfile: {{ bimdata_dockerfiles_path }}/bases.dockerfile
    command: bash -c "python manage.py collectstatic --no-input & python manage.py migrate && python manage.py process_tasks & gunicorn platform_back.wsgi -w 4 -b 0.0.0.0:8000 --timeout 1200"
    expose:
      - 8000
    volumes:
      - {{ bimdata_docker_volume_path }}/web/static/platform_back:/opt/statics:rw
    environment:
      - VIRTUAL_HOST={{ platform_back_dns_name }}
      - ENV={{ app_env }}
      - API_URL=https://{{ api_dns_name }}
      - PLATFORM_BACK_URL=https://{{ platform_back_dns_name }}
      - APP_URL=https://{{ platform_front_dns_name }}
      - ALLOWED_HOSTS={{ platform_back_dns_name }}
      - SECRET_KEY={{ platform_back_secret_key }}
      - OIDC_RP_SIGN_ALGO=RS256
      - OIDC_OP_ISSUER=https://{{ iam_dns_name }}
      - SMTP_HOST={{ smtp_host }}
      - SMTP_PORT={{ smtp_port }}
      - SMTP_USER={{ smtp_user }}
      - SMTP_PASS={{ smtp_pass }}
      - SMTP_USE_TLS={{ smtp_use_tls }}
      - DEFAULT_FROM_EMAIL={{ smtp_default_email }}
      - WEBHOOK_SECRET={{ platform_back_webhook_secret }}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST={{ db_platform_host }}
      - DB_PORT={{ db_platform_port }}
      - DB_NAME={{ db_platform_name }}
      - DB_USER={{ db_platform_user }}
      - DB_PASSWORD={{ db_platform_password }}
      - REQUESTS_CA_BUNDLE=/usr/local/share/ca-certificates/custom-ca.crt
    restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
    extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}
    depends_on:
{% if not use_external_db and inventory_hostname in groups['db'] %}
      - platform-db
{% endif %}
      - nginx-proxy

  platform:
    container_name: platform-front
    build:
      context: {{ bimdata_docker_volume_path }}
      args:
        - IMAGE={{ docker_platform_front_image }}
        - TAG={{ docker_platform_front_tag }}
        - ENV={{ app_env }}
        - NODE_ENV=production
        - BD_APP_URL=https://{{ platform_front_dns_name }}
        - BD_OIDC_IP=https://{{ iam_dns_name }}
        - BD_OIDC_CLIENT_ID={{ platform_front_client_id }}
        - BD_CONNECT_URL=https://{{ connect_dns_name }}
        - BD_API_BASE_URL=https://{{ api_dns_name }}
        - BD_PLATFORM_BACK_BASE_URL=https://{{ platform_back_dns_name }}
        - BD_MAPBOX_TOKEN={{ mapbox_token }}
        - BD_MAX_UPLOAD_SIZE={{ max_upload_size | human_to_bytes }}
      dockerfile: {{ bimdata_dockerfiles_path }}/platform-build.dockerfile
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST={{ platform_front_dns_name }}
    restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
    extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}
    depends_on:
      - nginx-proxy

  iam:
    container_name: iam
    build:
      context: {{ bimdata_docker_volume_path }}
      args:
        - IMAGE={{ docker_iam_image }}
        - TAG={{ docker_iam_tag }}
        - TRUSTSTORE_PASSWORD={{ iam_truststore_password }}
      dockerfile: {{ bimdata_dockerfiles_path }}/keycloak.dockerfile
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST={{ iam_dns_name }}
      - VIRTUAL_PORT=8080
      - ENV={{ app_env }}
      - DB_VENDOR=POSTGRES
      - PROXY_ADDRESS_FORWARDING=true
      - DB_ADDR={{ db_iam_host }}
      - DB_PORT={{ db_iam_port }}
      - DB_SCHEMA=public
      - DB_DATABASE={{ db_iam_name }}
      - DB_USER={{ db_iam_user }}
      - DB_PASSWORD={{ db_iam_password }}
      - KEYCLOAK_HOSTNAME={{ iam_dns_name }}
      - KEYCLOAK_USER={{ iam_user }}
      - KEYCLOAK_PASSWORD={{ iam_password }}
      - KEYCLOAK_IMPORT=/opt/bimdata-realm.json
      - TRUSTSTORE_PASSWORD={{ iam_truststore_password }}
    restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
    extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}
    depends_on:
{% if not use_external_db and inventory_hostname in groups['db'] %}
      - iam-db
{% endif %}
      - nginx-proxy

{% if inventory_hostname in groups['workers'] %}
  # Workers
  {{ compose_workers | to_nice_yaml(indent=2) | indent(2) }}
{%- endif %}
