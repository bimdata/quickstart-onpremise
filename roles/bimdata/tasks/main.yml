---
- name: "Create needed directories."
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ bimdata_path }}/scripts"
    - "{{ bimdata_dockerfiles_path }}"
    - "{{ bimdata_docker_volume_path }}/keycloak"
    - "{{ bimdata_docker_volume_path }}/web/static/api"
    - "{{ bimdata_docker_volume_path }}/web/static/connect"
    - "{{ bimdata_docker_volume_path }}/web/static/platform_back"
    - "{{ bimdata_docker_volume_path }}/web/static/marketplace_back"
    - "{{ bimdata_docker_volume_path }}/web/conf.d"
    - "{{ bimdata_docker_volume_path }}/web/vhost.d"
    - "{{ bimdata_docker_volume_path }}/web/certs"

- name: "Create needed directories for local storage."
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ bimdata_docker_volume_path }}/web/static/api_storage"
    - "{{ bimdata_docker_volume_path }}/web/static/connect_storage"
  when: not swift_enabled | bool

- name: "Create needed directories for db if needed."
  file:
    path: "{{ bimdata_docker_volume_path }}/db/{{ item }}"
    state: directory
    owner: 70
    group: 70
    mode: 0700
  loop:
    - api
    - connect
    - platform
    - iam
    - marketplace
  when:
    - not use_external_db
    - db_on_app

- name: "Copy pre-generated DH params."
  copy:
    src: pregen-dhparams.pem
    dest: "{{ bimdata_docker_volume_path }}/web/dhparam.pem"
    mode: 0640
  when: nginx_use_pregen_dh

- name: "Generate custom DH params."
  openssl_dhparam:
    path: "{{ bimdata_docker_volume_path }}/web/dhparam.pem"
    size: "{{ nginx_dhparam_size | default(omit) }}"
  when: not nginx_use_pregen_dh | bool

- name: "Include tasks for TLS."
  include_tasks: tls.yml

- name: "Copy .dockerignore file."
  copy:
    src: dockerignore
    dest: "{{ bimdata_docker_volume_path }}/.dockerignore"
    mode: 0640

- name: "Copy nginx custom configuration."
  template:
    src: web/custom.conf.j2
    dest: "{{ bimdata_docker_volume_path }}/web/conf.d/custom.conf"
    mode: 0640

- name: "Copy vhost override configuration."
  template:
    src: web/vhost.conf.j2
    dest: "{{ bimdata_docker_volume_path }}/web/vhost.d/{{ item.vhost }}"
    mode: 0640
  loop: "{{ nginx_vhost_override }}"

- name: "Copy keycloak realm."
  template:
    src: "keycloak/bimdata-realm.json.j2"
    dest: "{{ bimdata_docker_volume_path }}/keycloak/bimdata-realm.json"
    mode: 0640

- name: "Create docker-compose file."
  template:
    src: compose-migration-apps.yml.j2
    dest: "{{ bimdata_path }}/docker-compose.yml"
    mode: 0640
  vars:
    docker_api_tag: checkpoint_app_migrations

- name: "Pull needed images."
  command: docker-compose -f {{ bimdata_path }}/docker-compose.yml pull

- name: "Start containers"
  command: "docker-compose -f {{ bimdata_path }}/docker-compose.yml up --remove-orphans --detach"

# for dev
# - name: restore api db
#   command: "bash -c 'cat /tmp/bimdata_edf.dump | docker exec -i api-db psql -U api -d api'"

- name: "Copy restore apps script"
  copy:
    src: restore_apps.py
    dest: "{{ bimdata_path }}/restore_apps.py"
    mode: 0640

- name: "Copy load data script"
  copy:
    src: loaddata.py
    dest: "{{ bimdata_path }}/loaddata.py"
    mode: 0640

- name: Install script migration requirements
  pip:
    name: docker==5.0.3

- name: "Launch apps migration"
  command: "python {{ bimdata_path }}/restore_apps.py"
  register: migration

- name: "Fix migration dependancies"
  command: "docker exec {{ db_api_name }}-db psql -U {{ db_api_user }} -d {{ db_api_name }} -c \"UPDATE django_migrations SET name = '0065_ifc_gltf_with_openings_file' WHERE name = '0064_ifc_gltf_with_openings_file'\""

- name: "Stop containers"
  command: "docker-compose -f {{ bimdata_path }}/docker-compose.yml stop"

- name: "Remove containers"
  command: "docker-compose -f {{ bimdata_path }}/docker-compose.yml rm"

- name: remove docker-compose migration file
  file:
    state: absent
    path: "{{ bimdata_path }}/docker-compose.yml"

- name: "Create docker-compose file."
  template:
    src: compose-app.yml.j2
    dest: "{{ bimdata_path }}/docker-compose.yml"
    mode: 0640

- name: "Pull needed images."
  command: docker-compose -f {{ bimdata_path }}/docker-compose.yml pull

- name: "Start containers"
  command: "docker-compose -f {{ bimdata_path }}/docker-compose.yml up --remove-orphans --detach"

- name: "Include tasks for initialization."
  include_tasks: first-init.yml
