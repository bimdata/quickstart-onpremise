---
- name: "Apply post upgrade tasks for Postgresql major upgrade."
  when:
    - _dbs_upgraded is defined
    - _dbs_upgraded | length
  ansible.builtin.include_tasks: db_upgraded.yml
  loop: "{{ _dbs_upgraded }}"
  loop_control:
    loop_var: _db

- name: "Retrieve previous version"
  ansible.builtin.set_fact:
    _previous_version: "{{
      post_upgrade_version
      | default(
      hostvars[groups['app'][0]]['_previous_compose_content']['services']['api']['image'].split(':')[-1]
      if hostvars[groups['app'][0]]['_previous_compose_content'] is defined
      else 0
      )
      }}"

- name: "Apply needed post_upgrade tasks if this is a different version"
  when:
    - (_previous_version | int) != (bimdata_version | int )
  block:
    - name: "Print which version are use to determine which post upgrade tasks to run"
      ansible.builtin.debug:
        msg: "Post-upgrade from {{ _previous_version }} to {{ bimdata_version }}."

    - name: "Include tasks for 20241016 upgrade."
      ansible.builtin.include_tasks: "20241016.yml"
      when:
        - not _first_deploy | bool
        - _previous_version | int < 20241016
    - name: "Include tasks for 20241126 upgrade."
      ansible.builtin.include_tasks: "20241126.yml"
      when:
        - not _first_deploy | bool
        - _previous_version | int < 20241126
    - name: "Include tasks for 20251008 upgrade."
      ansible.builtin.include_tasks: "20251008.yml"
      when:
        - not _first_deploy | bool
        - _previous_version | int < 20251008
# End of block

- name: "Delete offline cache directory if requested"
  ansible.builtin.blockinfile:
    path: "{{ install_offline_cache_path }}"
    state: absent
  when:
    - install_offline | bool
    - install_offline_clear_cache | bool
