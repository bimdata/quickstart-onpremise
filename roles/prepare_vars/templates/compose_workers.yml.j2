workers-export:
  image: {{ docker_workers_export_image }}:{{ docker_workers_export_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_export_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.export"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_export_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-gltf:
  image: {{ docker_workers_gltf_image }}:{{ docker_workers_gltf_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_gltf_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.gltf"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_gltf_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-extract:
  image: {{ docker_workers_extract_image }}:{{ docker_workers_extract_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_extract_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.extract"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_extract_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-extract-with-quantities:
  image: {{ docker_workers_extract_quantities_image }}:{{ docker_workers_extract_quantities_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_extract_quantities_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.extract_with_quantities"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_extract_quantities_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-svg:
  image: {{ docker_workers_svg_image }}:{{ docker_workers_svg_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_svg_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.svg"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_svg_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-bvh:
  image: {{ docker_workers_bvh_image }}:{{ docker_workers_bvh_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_bvh_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.bvh_tree"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_bvh_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-optimize:
  image: {{ docker_workers_optimize_image }}:{{ docker_workers_optimize_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_optimize_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.optimize"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_optimize_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-merge:
  image: {{ docker_workers_merge_image }}:{{ docker_workers_merge_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_merge_instance }}
  command: bash -c "update-ca-certificates && poetry run workers.merge"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_merge_cpu }}
    - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-xkt:
  image: {{ docker_workers_xkt_image }}:{{ docker_workers_xkt_tag }}
  volumes:
    - {{ bimdata_docker_volume_path }}/ca.crt:/usr/local/share/ca-certificates/onprem-ca.crt:ro
  deploy:
    replicas: {{ workers_xkt_instance }}
  command: bash -c "update-ca-certificates && node --max-old-space-size=4096 src/worker"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - NODE_ENV=production
    - QUEUE=xkt
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_xkt_cpu }}
    - NODE_EXTRA_CA_CERTS=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}

workers-preview:
  build:
    context: {{ bimdata_docker_volume_path }}
    args:
      - IMAGE={{ docker_workers_preview_image }}
      - TAG={{ docker_workers_preview_tag }}
    dockerfile: {{ bimdata_dockerfiles_path }}/preview.dockerfile
  deploy:
    replicas: {{ workers_preview_instance }}
  command: bash -c "update-ca-certificates && node src/worker"
  environment:
    - RABBITMQ_HOST={{ rabbitmq_host }}
    - RABBITMQ_PORT={{ rabbitmq_port }}
    - RABBITMQ_USER={{ rabbitmq_user }}
    - RABBITMQ_PASSWORD={{ rabbitmq_password }}
    - API_URL=https://{{ api_dns_name }}
    - ENV={{ app_env }}
    - NODE_ENV=production
    - QUEUE=viewer_360
    - MASTER_TOKEN={{ master_token }}
    - CPU_ALLOCATED={{ workers_preview_cpu }}
    - NODE_EXTRA_CA_CERTS=/etc/ssl/certs/ca-certificates.crt
  restart: unless-stopped
{% if docker_use_extra_hosts | bool %}
  extra_hosts: {{ docker_extra_hosts | to_yaml }}
{% endif %}
